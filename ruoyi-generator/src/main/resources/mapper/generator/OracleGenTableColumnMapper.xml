<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.generator.mapper.OracleGenTableColumnMapper">

    <resultMap type="GenTableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>

    <select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult">
        select lower(temp.column_name) as column_name,
               (case when (temp.nullable = 'N'  and  temp.constraint_type != 'P') then '1' else null end) as is_required,
               (case when temp.constraint_type = 'P' then '1' else '0' end) as is_pk,
               temp.column_id as sort,
               temp.comments as column_comment,
               (case when temp.constraint_type = 'P' then '1' else '0' end) as is_increment,
               lower(temp.data_type) as column_type
        from (
                 select col.column_id, col.column_name,col.nullable, col.data_type, colc.comments, uc.constraint_type
                      , row_number() over (partition by col.column_name order by uc.constraint_type desc) as row_flg
                 from user_tab_columns col
                          left join user_col_comments colc on colc.table_name = col.table_name and colc.column_name = col.column_name
                          left join user_cons_columns ucc on ucc.table_name = col.table_name and ucc.column_name = col.column_name
                          left join user_constraints uc on uc.constraint_name = ucc.constraint_name
                 where col.table_name = upper(#{tableName})
             ) temp
        WHERE temp.row_flg = 1
        ORDER BY temp.column_id
    </select>

</mapper>
