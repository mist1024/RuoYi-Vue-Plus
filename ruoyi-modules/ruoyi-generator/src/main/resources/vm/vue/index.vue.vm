<template>
    <div class="p-2">
        <!-- 搜索操作栏 -->
        <transition :enter-active-class="proxy?.animate.searchAnimate.enter" :leave-active-class="proxy?.animate.searchAnimate.leave">
            <div class="search" v-show="showSearch">
                <el-form :model="queryParams" ref="queryFormRef" :inline="true" label-width="68px">
                    <el-row :gutter="10">
                        #foreach($column in $columns)
                            #if($column.query)
                                #set($dictType=$column.dictType)
                                #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                                #set($parentheseIndex=$column.columnComment.indexOf("（"))
                                #if($parentheseIndex != -1)
                                    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                                #else
                                    #set($comment=$column.columnComment)
                                #end
                                #if($column.htmlType == "input" || $column.htmlType == "textarea")
                                    <form-input label="${comment}" prop="${column.javaField}" v-model="queryParams.${column.javaField}" placeholder="请输入${comment}" clearable style="width: 240px" @keyup.enter="handleQuery"  />
                                #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
                                    <form-select-dict label="${comment}" prop="${column.javaField}" v-model="queryParams.${column.javaField}" placeholder="请选择${comment}" clearable :dicts="${dictType}"/>
                                #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
                                    <el-form-item label="${comment}" prop="${column.javaField}">
                                        <el-select v-model="queryParams.${column.javaField}" placeholder="请选择${comment}" clearable>
                                            <el-option label="请选择字典生成" value="" />
                                        </el-select>
                                    </el-form-item>
                                #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
                                    <form-date-picker label="${comment}" prop="${column.javaField}" clearable v-model="queryParams.${column.javaField}"  type="date" value-format="YYYY-MM-DD" placeholder="请选择${comment}"/>
                                #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                                    <form-date-picker label="${comment}" style="width: 308px"
                                                      v-model="dateRange${AttrName}"
                                                      value-format="YYYY-MM-DD"
                                                      type="daterange"
                                                      range-separator="-"
                                                      start-placeholder="开始日期"
                                                      end-placeholder="结束日期"
                                                      :default-time="[new Date(2000, 1, 1, 0, 0, 0), new Date(2000, 1, 1, 23, 59, 59)]"
                                    />
                                #end
                            #end
                        #end
                    </el-row>
                    <el-form-item>
                        <el-button type="primary" icon="Search" @click="handleQuery">搜索</el-button>
                        <el-button icon="Refresh" @click="resetQuery">重置</el-button>
                    </el-form-item>
                </el-form>
            </div>
        </transition>

        <!-- 列表 -->
        <RexTable
            :loading="loading"
            :data="${businessName}List"
            :total="total"
            :queryParams="queryParams"
            :columns="columns"
            :buttons="buttons"
            :operations="operations"
            @query="getList"
            v-model:selectedIds="ids"
        >
            #foreach($column in $columns)
                #set($javaField=$column.javaField)
                #set($parentheseIndex=$column.columnComment.indexOf("（"))
                #if($parentheseIndex != -1)
                    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                #else
                    #set($comment=$column.columnComment)
                #end
                #if($column.list && $column.htmlType == "datetime")
                <template #${javaField}="{ row }">
                    <span>{{ parseTime(row.${javaField}, '{y}-{m}-{d}') }}</span>
                </template>
                #elseif($column.list && $column.htmlType == "imageUpload")
                <template #${javaField}="{ row }">
                    <image-preview :src="row.${javaField}" :width="50" :height="50"/>
                </template>
                #elseif($column.list && $column.dictType && "" != $column.dictType)
                <template #${column.javaField}="{ row }">
                    #if($column.htmlType == "checkbox")
                        <dict-tag :options="${column.dictType}" :value="row.${javaField} ? row.${javaField}.split(',') : []"/>
                    #else
                        <dict-tag :options="${column.dictType}" :value="row.${javaField}"/>
                    #end
                </template>
                #end
            #end
        </RexTable>

        <!-- 添加或修改${functionName}对话框 -->
        <ModalForm v-model="dialog.visible" :title="dialog.title" :is-edit="dialog.isEdit" :id="${pkColumn.javaField}" @refresh="getList" @close="handleModalClose" />
    </div>
</template>

<script setup name="${BusinessName}" lang="ts">
import { use${BusinessName}Table } from './hooks/use${BusinessName}Table'
import { useDialog } from './hooks/useDialog'
import { ${BusinessName}VO } from '@/api/${moduleName}/${businessName}/types';
import ModalForm from './modules/form.vue'
import { Button, Column, Operation } from '@/api/types'

const { proxy } = getCurrentInstance() as ComponentInternalInstance
#if(${dicts} != '')
    #set($dictsNoSymbol=$dicts.replace("'", ""))
const { ${dictsNoSymbol} } = toRefs<any>(proxy?.useDict(${dicts}));
#end
const { ${businessName}List, loading, total, ids, queryParams, getList, handleDelete, clearSelection } = use${BusinessName}Table(proxy)
const { dialog, openDialog } = useDialog()
const showSearch = ref(true)
const id = ref<string | number>('')
const queryFormRef = ref<ElFormInstance>()

const handleQuery = () => {
    queryParams.pageNum = 1
    getList()
}

const resetQuery = () => {
    queryFormRef.value?.resetFields()
    handleQuery()
}

const handleAdd = () => openDialog('添加${functionName}', false)

const handleUpdate = (row?: ${BusinessName}VO) => {
    id.value = row?.id || ids.value[0]
    openDialog('修改${functionName}', true)
}

const handleExport = () => {
    proxy?.download('${moduleName}/${businessName}/export', {
        ...queryParams
    }, `${businessName}_#[[${new Date().getTime()}]]#.xlsx`)
}
// 关闭弹窗时清空已选中项
const handleModalClose = () => {
    clearSelection.value = true
}

// 列
const columns: Column[] = [
#foreach($column in $columns)
    #set($javaField=$column.javaField)
    #set($parentheseIndex=$column.columnComment.indexOf("（"))
    #if($parentheseIndex != -1)
        #set($comment=$column.columnComment.substring(0, $parentheseIndex))
    #else
        #set($comment=$column.columnComment)
    #end
    #if($column.pk)
    ## 如果需要显示id就把这个注释去掉
    ## { label: '${comment}', prop: '${javaField}', align: 'center' },
    #elseif($column.list && $column.htmlType == "datetime" || $column.htmlType == "imageUpload" || $column.dictType && "" != $column.dictType)
    { label: '${comment}', prop: '${javaField}', align: 'center', slot: '${javaField}' },
    #elseif($column.list && "" != $javaField)
    { label: '${comment}', prop: '${javaField}', align: 'center' },
    #end
#end
]

// 是否可以修改
const canUpdate = computed(() => ids.value.length === 1)
// 是否可以删除
const canDelete = computed(() => ids.value.length > 0)

// 按钮
const buttons: Button[] = [
    {
        text: '新增',
        type: 'primary',
        icon: 'Plus',
        handler: handleAdd,
        permission: ['${moduleName}:${businessName}:add']
    },
    {
        text: '修改',
        type: 'success',
        icon: 'Edit',
        handler: handleUpdate,
        permission: ['${moduleName}:${businessName}:edit'],
        disabledCondition: () => !canUpdate.value
    },
    {
        text: '删除',
        type: 'danger',
        icon: 'Delete',
        handler: handleDelete,
        permission: ['${moduleName}:${businessName}:remove'],
        disabledCondition: () => !canDelete.value
    },
    { text: '导出', type: 'warning', icon: 'Download', handler: handleExport, permission: ['${moduleName}:${businessName}:export'] }
]
// 操作按钮
const operations: Operation[] = [
    { text: '修改', type: 'primary', icon: 'Edit', handler: handleUpdate, permission: ['${moduleName}:${businessName}:edit'] },
    {
        text: '删除',
        type: 'primary',
        icon: 'Delete',
        handler: handleDelete,
        permission: ['${moduleName}:${businessName}:remove'],
        needConfirm: true
    },
    // 其他按钮，如果这个按钮不需要权限，可以不用写permission或permission: []
    // { text: '测试', type: 'primary', icon: 'Search', handler: handleAdd, permission: [] }
]

onMounted(getList)

defineExpose({
    getList
})
</script>
