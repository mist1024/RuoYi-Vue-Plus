<style lang="less">


</style>

<wxs module="filters" lang="babel">
const parseImage = (imageKey) => {
return 'https://winery-1257413599.cos.ap-beijing.myqcloud.com/' + imageKey
}
module.exports.parseImage = parseImage;
</wxs>
<template>

  <nav-bar title="我的购物车" />


  <div style="width: 100%;">

    <van-loading wx:if="{{ !isInit }}" style="margin-top: 20px;"></van-loading>
    <view wx:else>


      <div v-if="shoppingCar.length < 1" style="display: flex;flex-direction: column;align-items: center;width: 100%;">
        <van-empty description="暂无内容" />
      </div>

      <van-checkbox-group value="{{ checkList }}" bind:change="onChangeCheckbox">
        <div v-for="(item,index) in shoppingCar" style="width: 100%;">

          <van-card
            :price="item.goodsPrice"
            :desc="item.remark"
            :title="item.goodsName"

          >
            <view slot="thumb" style="display: flex; align-items: center;">

              <van-checkbox :name="item.goodsId" />
              <van-image width="60px" height="60px" :src="filters.parseImage(item.goodsFaceImg)"
                         style="margin-left: 5px;" />
            </view>
            <view slot="num">
              <div style="display: flex;align-items: center;justify-content: flex-end;">
                <span style="font-size: 15px;margin-right: 5px;">数量:</span>
                <van-stepper id="{{item.goodsId}}" name="{{item.goodsId}}" value="{{item.goodsCount}}"
                             @change="onGoodsCount" />
              </div>
            </view>
          </van-card>


        </div>
      </van-checkbox-group>
    </view>


  </div>

  <van-submit-bar
    price="{{totalPrice}}"
    button-text="提交订单"
    bind:submit="onSubmit"
    :tip="false"
  >
    <van-checkbox
      value="{{ isCheckedAll }}"
      checked-color="#07c160"
      bind:change="onCheckedAll"

    >
      全选
    </van-checkbox>
    <!--    <view slot="tip">您的收货地址不支持同城送,-->
    <!--      <text>修改地址</text>-->
    <!--    </view>-->
  </van-submit-bar>


</template>

<script>
import wepy from '@wepy/core'
import store from '@/store'

import { mapActions, mapState } from '@wepy/x'
import defaultMix from '../../../mixins/defaultMix'
import { navDefine } from '../../../store/constant/navDefine'
import appManager from '../../../appManager'

wepy.page({
  store,
  hooks: {},
  data: {

    isInit: false,
    isCheckedAll: true,
    checkList: []

  },
  mixins: [defaultMix],
  computed: {
    ...mapState({
      'imageDefine': state => state.imageDefine,
      'user': state => state.user,
      'navDefine': state => state.navDefine,
      'userAddress': state => state.userAddress,
      'shoppingCar': state => state.shoppingCar

    }),
    totalPrice() {
      let temp = this.shoppingCar.filter(x => this.checkList.indexOf(x.goodsId) > -1)
      let result = 0.0
      temp.forEach(x => {
        result += (x.goodsPrice * x.goodsCount)
      })
      console.log('总计：', result)
      return result * 100
    }
  },
  events: {},

  methods: {
    ...mapActions([
      'setOrderAction',
      'setShoppingCarAction'
    ]),

    onChangeCheckbox(e) {
      this.checkList = e.$wx.detail
      this.isCheckedAll = this.checkList.length === this.shoppingCar.length
    },
    onSubmit() {
      if (this.shoppingCar.length < 1) {
        appManager.showToast('购物车中没有商品.')
        return
      }

      let order = {
        addressId: '',
        orderDetailList: [],
        remark: ''
      }

      order.orderDetailList = this.shoppingCar

      this.setOrderAction(order)

      appManager.navigateTo(navDefine.ORDER_CHECK)
    },
    onCheckedAll(e) {
      this.isCheckedAll = e.$wx.detail
      this.checkList = this.isCheckedAll ? this.shoppingCar.map(x => x.goodsId) : []
    },
    onGoodsCount(e) {
      this.shoppingCar.filter(x => x.goodsId === e.target.id)[0].goodsCount = e.$wx.detail
      this.setShoppingCarAction(this.shoppingCar)
    },
    async init() {
      this.isInit = false
      this.checkList = this.shoppingCar.map(x => x.goodsId)
      this.isInit = true
    }
  },

  ready() {
    this.init()
  },
  onShow() {
    this.init()
  }
})
</script>
<config>
{
navigationBarTitleText: '',

usingComponents: {
}


}
</config>
