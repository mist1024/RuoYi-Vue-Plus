<style lang="less">

.bg {
  z-index: -1;
  height: 100%;
  position: fixed;
  width: 200rpx;
  background-color: #AC1630;
}

.winery-item {

  width: 400rpx;
  height: 60px;
  margin-bottom: 20px;
  box-shadow: 4px 4px 10px #cccccc;
  border: #ffffff 1px solid;
  border-radius: 20px;
  background-color: white;
  padding: 15px 70rpx;

}

.winery-item-icon {
  position: absolute;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-items: center;
  justify-content: center;
  text-align: center;
  background-color: white;
  box-shadow: 4px 4px 10px #cccccc;
  margin-top: 10px;
  margin-left: -40rpx;
  border: #ffffff 1px solid;
  border-radius: 50%;
}

.winery-item-arrow {

  position: absolute;
  width: 45px;
  height: 45px;
  display: flex;
  align-items: center;
  justify-items: center;
  justify-content: center;
  background-color: white;
  box-shadow: 4px 4px 10px #cccccc;
  margin-top: 18.5px;
  margin-left: 500rpx;
  border: #ffffff 1px solid;
  border-radius: 50%;

}


</style>

<wxs module="filters" lang="babel">
const parseImage = (imageKey) => {
return 'https://winery-1257413599.cos.ap-beijing.myqcloud.com/' + imageKey
}
module.exports.parseImage = parseImage;
</wxs>
<template>


  <nav-bar :title="newItem.newsTitle" />
  <div class="container">
    <van-loading v-if="!newItem" style="margin-top: 20px;" />

    <div v-else style="margin-bottom: 80px;">
      <div style="margin: 10px 15px;display: flex;flex-direction: column;">

        <div style="margin-top: 10px;width:100%;">
          <rich-text :nodes="newItem.newsBody" />
        </div>
      </div>

    </div>
  </div>

</template>

<script>
import wepy from '@wepy/core'
import store from '@/store'
import { mapActions, mapState } from '@wepy/x'
import defaultMix from '../../mixins/defaultMix'
import merchanApis from '../../apis/merchanApis'
import mallApis from '../../apis/mallApis'

wepy.page({
  store,
  hooks: {},

  mixins: [defaultMix],
  data: {
    newItem: null,
    title: ''
  },

  computed: {
    ...mapState({
      'imageDefine': state => state.imageDefine
    })
  },

  methods: {
    ...mapActions([]),
    async init(id) {
      mallApis.getNewsContent(id).then(r => {
        this.newItem = r.data
      })
    }
  },

  onLoad(options) {
    console.log(options)
    if (options.id) {
      this.init(options.id)
    }
  }

})
</script>
<config>
{
navigationBarTitleText: '',
usingComponents: {

}
}
</config>
